Index: resources/http_requests.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import traceback\r\n\r\nimport requests\r\nimport json\r\n\r\nfrom fhirclient.models.bundle import Bundle\r\n\r\nfrom fhir_tool.exceptions.resource_not_available import ResourceNotAvailable\r\nfrom fhir_tool.exceptions.resource_not_found import ResourceNotFound\r\nfrom fhir_tool.fhir_client.fhir_client import smart\r\n\r\nbase_url: str = 'http://localhost:8080/fhir'\r\nheaders: dict[str, str] = {\"Content-Type\": \"application/fhir+json; charset=utf-8\"}\r\n\r\ndataCI = {\r\n    \"resourceType\": \"ClinicalImpression\",\r\n    \"id\": \"example\",\r\n    \"text\": {\r\n        \"status\": \"generated\",\r\n        \"div\": \"<div xmlns=\\\"http://www.w3.org/1999/xhtml\\\"><p><b>Generated Narrative: ClinicalImpression</b><a name=\\\"example\\\"> </a><a name=\\\"hcexample\\\"> </a></p><div style=\\\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\\\"><p style=\\\"margin-bottom: 0px\\\">Resource ClinicalImpression &quot;example&quot; </p></div><p><b>identifier</b>: 12345</p><p><b>status</b>: completed</p><p><b>description</b>: This 26 yo male patient is brought into ER by ambulance after being involved in a motor vehicle accident</p><p><b>subject</b>: <a href=\\\"patient-example.html\\\">Patient/example</a> &quot;Peter CHALMERS&quot;</p><p><b>encounter</b>: <a href=\\\"encounter-example.html\\\">Encounter/example</a></p><p><b>effective</b>: 2014-12-06T20:00:00+11:00 --&gt; 2014-12-06T22:33:00+11:00</p><p><b>date</b>: 2014-12-06T22:33:00+11:00</p><p><b>performer</b>: <a href=\\\"practitioner-example.html\\\">Practitioner/example</a> &quot;Adam CAREFUL&quot;</p><p><b>problem</b>: <span>: MVA</span></p><p><b>summary</b>: <span title=\\\" \\n   &lt;investigation&gt;\\n    &lt;code&gt;\\n      &lt;text value=&quot;Initial Examination&quot;/&gt;\\n    &lt;/code&gt;\\n    &lt;item&gt;\\n      &lt;display value=&quot;deep laceration of the scalp (left temporo-occipital)&quot;/&gt;\\n    &lt;/item&gt;\\n    &lt;item&gt;\\n      &lt;display value=&quot;decreased level of consciousness&quot;/&gt;\\n    &lt;/item&gt;\\n    &lt;item&gt;\\n      &lt;display value=&quot;disoriented to time and place&quot;/&gt;\\n    &lt;/item&gt;\\n    &lt;item&gt;\\n      &lt;display value=&quot;restless&quot;/&gt;\\n    &lt;/item&gt;\\n  &lt;/investigation&gt;\\n   \\\">provisional diagnoses of laceration of head and traumatic brain injury (TBI)</span></p><blockquote><p><b>finding</b></p><h3>Items</h3><table class=\\\"grid\\\"><tr><td style=\\\"display: none\\\">-</td><td><b>Concept</b></td></tr><tr><td style=\\\"display: none\\\">*</td><td>850.0 <span style=\\\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\\\"> (ICD-9#850.0)</span></td></tr></table></blockquote></div>\"\r\n    },\r\n    \"identifier\": [{\r\n        \"value\": \"12345\"\r\n    }],\r\n    \"status\": \"completed\",\r\n    \"description\": \"This 26 yo male patient is brought into ER by ambulance after being involved in a motor vehicle accident\",\r\n    \"subject\": {\r\n        \"reference\": \"Patient/example\"\r\n    },\r\n    \"encounter\": {\r\n        \"reference\": \"Encounter/example\"\r\n    },\r\n    \"effectivePeriod\": {\r\n        \"start\": \"2014-12-06T20:00:00+11:00\",\r\n        \"end\": \"2014-12-06T22:33:00+11:00\"\r\n    },\r\n    \"date\": \"2014-12-06T22:33:00+11:00\",\r\n    \"performer\": {\r\n        \"reference\": \"Practitioner/example\"\r\n    },\r\n    \"problem\": [{\r\n        \"display\": \"MVA\"\r\n    }],\r\n    \"summary\": \"provisional diagnoses of laceration of head and traumatic brain injury (TBI)\",\r\n    \"finding\": [{\r\n        \"item\": {\r\n            \"concept\": {\r\n                \"coding\": [{\r\n                    \"system\": \"http://hl7.org/fhir/sid/icd-9\",\r\n                    \"code\": \"850.0\"\r\n                }]\r\n            }\r\n        }\r\n    }]\r\n}\r\n\r\ndataPatient = {\r\n    \"resourceType\": \"Patient\",\r\n    \"id\": \"example\",\r\n    \"text\": {\r\n        \"status\": \"generated\",\r\n        \"div\": \"<div xmlns=\\\"http://www.w3.org/1999/xhtml\\\"><p style=\\\"border: 1px #661aff solid; background-color: #e6e6ff; padding: 10px;\\\"><b>Jim </b> male, DoB: 1974-12-25 ( Medical record number/12345\\u00a0(use:\\u00a0USUAL,\\u00a0period:\\u00a02001-05-06 --&gt; (ongoing)))</p><hr/><table class=\\\"grid\\\"><tr><td style=\\\"background-color: #f3f5da\\\" title=\\\"Record is active\\\">Active:</td><td>true</td><td style=\\\"background-color: #f3f5da\\\" title=\\\"Known status of Patient\\\">Deceased:</td><td colspan=\\\"3\\\">false</td></tr><tr><td style=\\\"background-color: #f3f5da\\\" title=\\\"Alternate names (see the one above)\\\">Alt Names:</td><td colspan=\\\"3\\\"><ul><li>Peter James Chalmers (OFFICIAL)</li><li>Peter James Windsor (MAIDEN)</li></ul></td></tr><tr><td style=\\\"background-color: #f3f5da\\\" title=\\\"Ways to contact the Patient\\\">Contact Details:</td><td colspan=\\\"3\\\"><ul><li>-unknown-(HOME)</li><li>ph: (03) 5555 6473(WORK)</li><li>ph: (03) 3410 5613(MOBILE)</li><li>ph: (03) 5555 8834(OLD)</li><li>534 Erewhon St PeasantVille, Rainbow, Vic  3999(HOME)</li></ul></td></tr><tr><td style=\\\"background-color: #f3f5da\\\" title=\\\"Nominated Contact: Next-of-Kin\\\">Next-of-Kin:</td><td colspan=\\\"3\\\"><ul><li>Bénédicte du Marché  (female)</li><li>534 Erewhon St PleasantVille Vic 3999 (HOME)</li><li><a href=\\\"tel:+33(237)998327\\\">+33 (237) 998327</a></li><li>Valid Period: 2012 --&gt; (ongoing)</li></ul></td></tr><tr><td style=\\\"background-color: #f3f5da\\\" title=\\\"Patient Links\\\">Links:</td><td colspan=\\\"3\\\"><ul><li>Managing Organization: <a href=\\\"organization-example-gastro.html\\\">Organization/1</a> &quot;Gastroenterology&quot;</li></ul></td></tr></table></div>\"\r\n    },\r\n    \"identifier\": [{\r\n        \"use\": \"usual\",\r\n        \"type\": {\r\n            \"coding\": [{\r\n                \"system\": \"http://terminology.hl7.org/CodeSystem/v2-0203\",\r\n                \"code\": \"MR\"\r\n            }]\r\n        },\r\n        \"system\": \"urn:oid:1.2.36.146.595.217.0.1\",\r\n        \"value\": \"12345\",\r\n        \"period\": {\r\n            \"start\": \"2001-05-06\"\r\n        },\r\n        \"assigner\": {\r\n            \"display\": \"Acme Healthcare\"\r\n        }\r\n    }],\r\n    \"active\": \"true\",\r\n    \"name\": [{\r\n        \"use\": \"official\",\r\n        \"family\": \"Chalmers\",\r\n        \"given\": [\"Peter\",\r\n                  \"James\"]\r\n    },\r\n        {\r\n            \"use\": \"usual\",\r\n            \"given\": [\"Jim\"]\r\n        },\r\n        {\r\n            \"use\": \"maiden\",\r\n            \"family\": \"Windsor\",\r\n            \"given\": [\"Peter\",\r\n                      \"James\"],\r\n            \"period\": {\r\n                \"end\": \"2002\"\r\n            }\r\n        }],\r\n    \"telecom\": [{\r\n        \"use\": \"home\"\r\n    },\r\n        {\r\n            \"system\": \"phone\",\r\n            \"value\": \"(03) 5555 6473\",\r\n            \"use\": \"work\",\r\n            \"rank\": 1\r\n        },\r\n        {\r\n            \"system\": \"phone\",\r\n            \"value\": \"(03) 3410 5613\",\r\n            \"use\": \"mobile\",\r\n            \"rank\": 2\r\n        },\r\n        {\r\n            \"system\": \"phone\",\r\n            \"value\": \"(03) 5555 8834\",\r\n            \"use\": \"old\",\r\n            \"period\": {\r\n                \"end\": \"2014\"\r\n            }\r\n        }],\r\n    \"gender\": \"male\",\r\n    \"birthDate\": \"1974-12-25\",\r\n    \"_birthDate\": {\r\n        \"extension\": [{\r\n            \"url\": \"http://hl7.org/fhir/StructureDefinition/patient-birthTime\",\r\n            \"valueDateTime\": \"1974-12-25T14:35:45-05:00\"\r\n        }]\r\n    },\r\n    \"deceasedBoolean\": \"false\",\r\n    \"address\": [{\r\n        \"use\": \"home\",\r\n        \"type\": \"both\",\r\n        \"text\": \"534 Erewhon St PeasantVille, Rainbow, Vic  3999\",\r\n        \"line\": [\"534 Erewhon St\"],\r\n        \"city\": \"PleasantVille\",\r\n        \"district\": \"Rainbow\",\r\n        \"state\": \"Vic\",\r\n        \"postalCode\": \"3999\",\r\n        \"period\": {\r\n            \"start\": \"1974-12-25\"\r\n        }\r\n    }],\r\n    \"contact\": [{\r\n        \"relationship\": [{\r\n            \"coding\": [{\r\n                \"system\": \"http://terminology.hl7.org/CodeSystem/v2-0131\",\r\n                \"code\": \"N\"\r\n            }]\r\n        }],\r\n        \"name\": {\r\n            \"family\": \"du Marché\",\r\n            \"_family\": {\r\n                \"extension\": [{\r\n                    \"url\": \"http://hl7.org/fhir/StructureDefinition/humanname-own-prefix\",\r\n                    \"valueString\": \"VV\"\r\n                }]\r\n            },\r\n            \"given\": [\"Bénédicte\"]\r\n        },\r\n        \"telecom\": [{\r\n            \"system\": \"phone\",\r\n            \"value\": \"+33 (237) 998327\"\r\n        }],\r\n        \"address\": {\r\n            \"use\": \"home\",\r\n            \"type\": \"both\",\r\n            \"line\": [\"534 Erewhon St\"],\r\n            \"city\": \"PleasantVille\",\r\n            \"district\": \"Rainbow\",\r\n            \"state\": \"Vic\",\r\n            \"postalCode\": \"3999\",\r\n            \"period\": {\r\n                \"start\": \"1974-12-25\"\r\n            }\r\n        },\r\n        \"gender\": \"female\",\r\n        \"period\": {\r\n            \"start\": \"2012\"\r\n        }\r\n    }],\r\n}\r\n\r\n\r\ndef get_metadata():\r\n    url = base_url + \"/metadata\"\r\n    try:\r\n        response = requests.get(url)\r\n        if response.status_code == 200:\r\n            return response.json()\r\n        else:\r\n            response.raise_for_status()\r\n    except Exception as e:\r\n        print(\"Error loading server metadata fromm url: \" + base_url)\r\n\r\n\r\ndef check_resource(res):\r\n    metadata = get_metadata()\r\n    resources = []\r\n    if 'rest' in metadata:\r\n        for rest in metadata['rest']:\r\n            if 'resource' in rest:\r\n                for resource in rest['resource']:\r\n                    # print(f\"Resource: {resource['type']}\")\r\n                    resources.append(resource['type'])\r\n\r\n    if res in resources:\r\n        return 1\r\n    else:\r\n        return 0\r\n\r\n\r\ndef get_by_resource(res_type: str) -> dict:\r\n    \"\"\"\r\n    :type res_type: str\r\n    \"\"\"\r\n    res_type.strip()\r\n    url = f\"{base_url}/{res_type}\"\r\n    try:\r\n        if check_resource(res_type):\r\n            response = requests.get(url)\r\n            return response.json()\r\n        else:\r\n            raise ResourceNotAvailable(\"Resource not available.\", errors=[\"Resource not available.\"])\r\n    except ResourceNotAvailable as e:\r\n        print(e.message)\r\n    except Exception as e:\r\n        print(\"requesting \" + url + \" went wrong.\")\r\n\r\n\r\ndef get_by_id(res_type: str, res_id: str) -> dict:\r\n    \"\"\"\r\n    :type res_type: str\r\n    :type res_id: str\r\n    \"\"\"\r\n    res_type.strip()\r\n    url = f\"{base_url}/{res_type}/{res_id}\"\r\n    try:\r\n        if check_resource(res_type):\r\n            response = requests.get(url)\r\n            if response.status_code in (200, 201):\r\n                return response.json()\r\n            else:\r\n                response.raise_for_status()\r\n                raise ResourceNotFound(\"Resource not found.\", errors=[\"Resource not found.\"])\r\n        else:\r\n            raise ResourceNotAvailable(\"Resource not available.\", errors=[\"Resource not available.\"])\r\n    except ResourceNotAvailable as e:\r\n        print(e.message)\r\n    except Exception as e:\r\n        print(\"requesting \" + url + \" went wrong.\")\r\n\r\n\r\ndef post_request(res_type: str, data: dict) -> dict:\r\n    \"\"\"\r\n    :type res_type: Resource type\r\n    :type data: data to store in the resource\r\n    \"\"\"\r\n    res_type.strip()\r\n    url = f\"{base_url}/{res_type}\"\r\n    try:\r\n        if check_resource(res_type):\r\n            response = requests.post(url, headers=headers, json=data)\r\n            print(response.json())\r\n            return response.json()\r\n        else:\r\n            raise ResourceNotAvailable(\"Resource not available.\", errors=[\"Resource not available.\"])\r\n    except ResourceNotAvailable as e:\r\n        print(e.message)\r\n    except Exception as e:\r\n        print(\"post request to \" + url + \" went wrong.\")\r\n        print(traceback.format_exc())\r\n\r\n\r\ndef update_request(res_type: str, res_id: str, updated_data: dict) -> dict:\r\n    \"\"\"\r\n    :type res_type: basestring\r\n    :type updated_data: dict\r\n    :type res_id: str\r\n    \"\"\"\r\n    res_type.strip()\r\n    url = f\"{base_url}/{res_type}/{res_id}\"\r\n\r\n    try:\r\n\r\n        if check_resource(res_type):\r\n            response = requests.put(url, headers=headers, data=json.dumps(updated_data))\r\n            return response.json()\r\n        else:\r\n            raise ResourceNotAvailable(\"Resource not available.\", errors=[\"Resource not available.\"])\r\n    except ResourceNotAvailable as e:\r\n        print(e.message)\r\n    except Exception as e:\r\n        print(\"put request to \" + url + \" went wrong.\")\r\n\r\n\r\ndef delete_by_id(res_type: str, res_id: str) -> dict:\r\n    \"\"\"\r\n    :type res_type: str\r\n    :type res_id: str\r\n    \"\"\"\r\n    res_type.strip()\r\n    url = f\"{base_url}/{res_type}/{res_id}\"\r\n    try:\r\n        if check_resource(res_type):\r\n            response = requests.delete(url)\r\n            if response.status_code in (200, 201):\r\n                return response.json()\r\n            else:\r\n                response.raise_for_status()\r\n                raise ResourceNotFound(\"Resource not found.\", errors=[\"Resource not found.\"])\r\n        else:\r\n            raise ResourceNotAvailable(\"Resource not available.\", errors=[\"Resource not available.\"])\r\n    except ResourceNotAvailable as e:\r\n        print(e.message)\r\n    except Exception as e:\r\n        print(\"requesting \" + url + \" went wrong.\")\r\n\r\n\r\ndef delete_by_params(params: dict, res_type: str = \"\") -> dict:\r\n    \"\"\"\r\n    :type params: dict\r\n    :type res_type: str\r\n    \"\"\"\r\n    if(res_type != \"\"):\r\n        res_type.strip()\r\n        url = f\"{base_url}/{res_type}/{params}\"\r\n    else:\r\n        url = f\"{base_url}/{params}\"\r\n\r\n    try:\r\n        if check_resource(res_type):\r\n            response = requests.delete(url)\r\n            if response.status_code in (200, 201):\r\n                return response.json()\r\n            else:\r\n                response.raise_for_status()\r\n                raise ResourceNotFound(\"Resource not found.\", errors=[\"Resource not found.\"])\r\n        else:\r\n            raise ResourceNotAvailable(\"Resource not available.\", errors=[\"Resource not available.\"])\r\n    except ResourceNotAvailable as e:\r\n        print(e.message)\r\n    except Exception as e:\r\n        print(\"requesting \" + url + \" went wrong.\")\r\n\r\n\r\ndef get_resource_count(res_type: str) -> int:\r\n    \"\"\"\r\n    :param res_type: Resource type\r\n    :return:\r\n    \"\"\"\r\n    url = f\"{base_url}/{res_type}?_summary=count\"\r\n    try:\r\n        response = requests.get(url)\r\n\r\n        if response.status_code == 200:\r\n            # Parse the JSON response\r\n            data = response.json()\r\n            # Extract the total count of patients\r\n            total = data['total']\r\n            print(f\"Total number of patients: {total}\")\r\n            return total\r\n    except ResourceNotAvailable as e:\r\n        print(e.message)\r\n    except Exception as e:\r\n        print(\"requesting \" + url + \" went wrong.\")\r\n\r\n\r\ndef post_request_batch(bundle: Bundle):\r\n    try:\r\n        print(bundle)\r\n        response = requests.post(base_url, data=bundle, headers=headers)\r\n        print(response.json())\r\n        if response.status_code in [200, 201]:\r\n            print(\"Successfully sent the bundle to the FHIR server.\")\r\n            print(response.json())\r\n        else:\r\n            raise Exception(\"Error sending bundle to the FHIR server.\")\r\n            print(f\"Failed to send the bundle: {response.status_code}, {response.text}\")\r\n    except Exception as e:\r\n        print(\"Sending the bundle to the server went wrong \" + e.message)\r\n\r\n\r\ndef request_bundle(bundle: Bundle):\r\n    try:\r\n        response = smart.batch(bundle)\r\n        print(response)\r\n        if response.status_code in [200, 201]:\r\n            print(\"Successfully sent the bundle to the FHIR server.\")\r\n            print(response.json())\r\n        else:\r\n            raise Exception(\"Error sending bundle to the FHIR server.\")\r\n            print(f\"Failed to send the bundle: {response.status_code}, {response.text}\")\r\n    except Exception as e:\r\n        print(\"Sending the bundle to the server went wrong \" + e.message)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/resources/http_requests.py b/resources/http_requests.py
--- a/resources/http_requests.py	(revision 5b6dabb3103eba3904752e5b489038824c27b428)
+++ b/resources/http_requests.py	(date 1721224099490)
@@ -6,8 +6,8 @@
 from fhirclient.models.bundle import Bundle
 
 from fhir_tool.exceptions.resource_not_available import ResourceNotAvailable
-from fhir_tool.exceptions.resource_not_found import ResourceNotFound
-from fhir_tool.fhir_client.fhir_client import smart
+from exceptions.resource_not_found import ResourceNotFound
+from .fhir_client import smart
 
 base_url: str = 'http://localhost:8080/fhir'
 headers: dict[str, str] = {"Content-Type": "application/fhir+json; charset=utf-8"}
Index: generators/episode_of_care.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import concurrent.futures\r\nimport json\r\nimport time\r\nimport threading\r\nfrom typing import Union\r\nfrom providers.human_name import HumanNameUseProvider\r\nfrom providers.contact_point import ContactPointSystemProvider, ContactPointUseProvider\r\nfrom providers.address import AddressTypeProvider, AddressUseProvider\r\nfrom providers.gender import GenderProvider\r\nfrom providers.marital_status import MaritalProvider\r\n\r\n\r\nfrom faker import Faker\r\n\r\nfrom providers.visitor_number import VisitorNumberProvider\r\nfrom resources.http_requests import post_request\r\n\r\nfake = Faker()\r\n\r\nfake.add_provider(HumanNameUseProvider)\r\nfake.add_provider(ContactPointSystemProvider)\r\nfake.add_provider(ContactPointUseProvider)\r\nfake.add_provider(AddressUseProvider)\r\nfake.add_provider(AddressTypeProvider)\r\nfake.add_provider(GenderProvider)\r\nfake.add_provider(MaritalProvider)\r\nfake.add_provider(VisitorNumberProvider)\r\n\r\nfake.date_of_birth(None, 0, 115)\r\n\r\n\r\ndef episode_of_care_generator() -> Union[dict, None]:\r\n    address = fake.address()\r\n    address_dict = parse_address(address)\r\n\r\n    data = {\r\n        \"resourceType\": \"EpisodeOfCare\",\r\n        \"active\": fake.boolean(95),\r\n        \"subject\":fake.uuid4(),\r\n\t\t\t\"identifier\":[\r\n\t\t\t\t{\r\n\t\t\t\t\t\"type\":{\r\n\t\t\t\t\t\t\"code\":\"VN\",\r\n\t\t\t\t\t\t\"system\":\"http://terminology.hl7.org/CodeSystem/v2-0203\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"value\": fake.visitor_number(),\r\n\t\t\t\t\t\"issuer\":{\r\n\t\t\t\t\t\t\"oid\":\"1.2.276.0.76.3.1.12345.0815\",\r\n\t\t\t\t\t\t\"system\":\"http://www.krankenhaus-oberstadt.de/sid/fallnr\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"status\":\"active\",\r\n\t\t\t\"period\":{\r\n\t\t\t\t\"start\":\"2023-09-08T08:30:00\"\r\n\t\t\t}\r\n    }\r\n    return data\r\n\r\n\r\ndef post_request_batch(batch_data):\r\n    for data in batch_data:\r\n        post_request(\"Patient\", data)\r\n\r\n\r\ndef generate_patients(n: int, batch_size: int = 10):\r\n    \"\"\"\r\n    :type n: Number of patients to generate\r\n    :type batch_size: Size of a batch to send to the server\r\n    \"\"\"\r\n    print(f\"Start generating {n} patients\")\r\n    start = time.time()\r\n\r\n    patients = []\r\n    with concurrent.futures.ThreadPoolExecutor() as executor:\r\n        futures = [executor.submit(generate_patient_data) for _ in range(n)]\r\n        for future in concurrent.futures.as_completed(futures):\r\n            patients.append(future.result())\r\n\r\n    # Batch processing\r\n    for i in range(0, len(patients), batch_size):\r\n        batch = patients[i:i + batch_size]\r\n        post_request_batch(batch)\r\n        # print(f\"Batch {i // batch_size + 1} of {len(patients) // batch_size + 1} processed\")\r\n\r\n    total = time.time() - start\r\n    print(f\"Task completed in {total} seconds\")\r\n\r\n\r\ndef generate_patients_threads(n: int, max_parallel: int = 20):\r\n    \"\"\"\r\n    :param n: Number of patients to generate\r\n    :param batch_size: Size of a batch to send to the server\r\n    :param max_parallel: Maximum number of threads\r\n    \"\"\"\r\n    print(f\"Start generating {n} patients\")\r\n    start = time.time()\r\n    patients = []\r\n\r\n    # Thread pool for generating patient data\r\n    with concurrent.futures.ThreadPoolExecutor() as executor:\r\n        futures = [executor.submit(generate_patient_data) for _ in range(n)]\r\n        for future in concurrent.futures.as_completed(futures):\r\n            patients.append(future.result())\r\n\r\n    # Thread pool for sending POST requests with max 20 threads\r\n    with concurrent.futures.ThreadPoolExecutor(max_workers=max_parallel) as executor:\r\n        futures = []\r\n        for patient in patients:\r\n            futures.append(executor.submit(post_request, \"Patient\", patient))\r\n        concurrent.futures.wait(futures)\r\n\r\n    total = time.time() - start\r\n    print(f\"Task completed in {total} seconds\")\r\n\r\n\r\n\"\"\"\r\ndef generate_patient1(n: int):\r\n    print(\"Start generating \" + str(n) + \" patients\")\r\n    start = time.time()\r\n    count: int = 0\r\n    for _ in range(n):\r\n        address = fake.address()\r\n        address_dict = parse_address(address)\r\n\r\n        data = {\r\n            \"resourceType\": \"Patient\",\r\n            \"active\": True,\r\n            \"name\": [\r\n                {\r\n                    \"use\": fake.human_name_use(),\r\n                    \"family\": fake.last_name(),\r\n                    \"given\": [fake.first_name()],\r\n                }\r\n            ],\r\n            \"gender\": fake.gender(),\r\n            \"birthDate\": fake.date_of_birth().isoformat(),\r\n            \"telecom\": [{\r\n                \"use\": fake.contact_point_use()\r\n            },\r\n                {\r\n                    \"system\": \"phone\",\r\n                    \"value\": fake.phone_number(),\r\n                    \"use\": fake.contact_point_use(),\r\n                    \"rank\": 1\r\n                },\r\n                {\r\n                    \"system\": \"email\",\r\n                    \"value\": fake.safe_email(),\r\n                    \"use\": fake.contact_point_use(),\r\n                    \"rank\": 2\r\n                },\r\n                {\r\n                    \"system\": \"email\",\r\n                    \"value\": fake.safe_email(),\r\n                    \"use\": fake.contact_point_use(),\r\n                    \"period\": {\r\n                        \"end\": fake.year()\r\n                    }\r\n                }],\r\n            \"address\": [{\r\n                \"use\": fake.address_use(),\r\n                \"type\": fake.address_type(),\r\n                \"text\": address,\r\n                \"line\": [address_dict['street']],\r\n                \"city\": address_dict['city'],\r\n                \"state\": address_dict['state'],\r\n                \"postalCode\": address_dict['zip_code'],\r\n                \"period\": {\r\n\r\n                    \"start\": fake.date()\r\n                }\r\n            }],\r\n        }\r\n\r\n        post_request(\"Patient\", data)\r\n        count += 1\r\n        print(\"Patient nr. \" + str(count) + \" created\")\r\n\r\n    total = time.time() - start\r\n    print(\"Task completed in \" + str(total) + \" seconds\")\r\n\"\"\"\r\n\r\n\r\ndef parse_address(address: str) -> dict[str, str]:\r\n    \"\"\"\r\n    Split Address: street, city, country und zip\r\n\r\n    :param address: Randomly generated address with fake.address() method\r\n    :return: dict with street, city, country and zip\r\n    \"\"\"\r\n    lines = address.split('\\n')\r\n    if len(lines) != 2:\r\n        raise ValueError(\"Address format is incorrect.\")\r\n\r\n    street = lines[0].strip()\r\n    city_state_zip = lines[1].strip()\r\n\r\n    if ',' in city_state_zip:\r\n        city, state_zip = city_state_zip.rsplit(',', 1)\r\n        city = city.strip()\r\n        state_zip = state_zip.strip()\r\n    else:\r\n        city = \"\"\r\n        state_zip = city_state_zip\r\n\r\n    state_zip_parts = state_zip.split()\r\n    if len(state_zip_parts) < 2:\r\n        raise ValueError(\"State and ZIP code format is incorrect.\")\r\n\r\n    state = \" \".join(state_zip_parts[:-1])\r\n    zip_code = state_zip_parts[-1]\r\n\r\n    state = state.strip()\r\n    zip_code = zip_code.strip()\r\n\r\n    return {\r\n        'street': street,\r\n        'city': city,\r\n        'state': state,\r\n        'zip_code': zip_code\r\n    }\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/generators/episode_of_care.py b/generators/episode_of_care.py
--- a/generators/episode_of_care.py	(revision 5b6dabb3103eba3904752e5b489038824c27b428)
+++ b/generators/episode_of_care.py	(date 1721029229988)
@@ -73,7 +73,7 @@
 
     patients = []
     with concurrent.futures.ThreadPoolExecutor() as executor:
-        futures = [executor.submit(generate_patient_data) for _ in range(n)]
+        futures = [executor.submit(episode_of_care_generator) for _ in range(n)]
         for future in concurrent.futures.as_completed(futures):
             patients.append(future.result())
 
@@ -99,7 +99,7 @@
 
     # Thread pool for generating patient data
     with concurrent.futures.ThreadPoolExecutor() as executor:
-        futures = [executor.submit(generate_patient_data) for _ in range(n)]
+        futures = [executor.submit(episode_of_care_generator) for _ in range(n)]
         for future in concurrent.futures.as_completed(futures):
             patients.append(future.result())
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"3fabb222-5e7b-4289-81fd-5e64d5ec8aa9\" name=\"Changes\" comment=\"inital commit\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 5\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2j6DPN86BO15l82f2RwsVhxWVeK\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"ASKED_ADD_EXTERNAL_FILES\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"git-widget-placeholder\": \"master\",\r\n    \"last_opened_file_path\": \"C:/Users/KuziaJ/PycharmProjects/data-generator/generators\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"settings.editor.selected.configurable\": \"project.propVCSSupport.DirectoryMappings\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\KuziaJ\\PycharmProjects\\data-generator\\generators\" />\r\n      <recent name=\"C:\\Users\\KuziaJ\\PycharmProjects\\data-generator\" />\r\n      <recent name=\"C:\\Users\\KuziaJ\\PycharmProjects\\data-generator\\resources\" />\r\n      <recent name=\"C:\\Users\\KuziaJ\\PycharmProjects\\data-generator\\providers\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-js-predefined-1d06a55b98c1-0b3e54e931b4-JavaScript-PY-241.17011.127\" />\r\n        <option value=\"bundled-python-sdk-48aec45f0201-7e9c3bbb6e34-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-241.17011.127\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"3fabb222-5e7b-4289-81fd-5e64d5ec8aa9\" name=\"Changes\" comment=\"\" />\r\n      <created>1720698607750</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1720698607750</updated>\r\n      <workItem from=\"1720698610064\" duration=\"1465000\" />\r\n      <workItem from=\"1720700101647\" duration=\"9924000\" />\r\n      <workItem from=\"1721024579274\" duration=\"255000\" />\r\n      <workItem from=\"1721024842934\" duration=\"684000\" />\r\n      <workItem from=\"1721025540532\" duration=\"248000\" />\r\n      <workItem from=\"1721025800004\" duration=\"1633000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"inital commit\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1720699727060</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1720699727060</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"CUSTOM_BOOLEAN_PROPERTIES\">\r\n                <map>\r\n                  <entry key=\"Show.Git.Branches\" value=\"true\" />\r\n                </map>\r\n              </option>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"master\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <ignored-roots>\r\n      <path value=\"$PROJECT_DIR$\" />\r\n    </ignored-roots>\r\n    <MESSAGE value=\"inital commit\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"inital commit\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 5b6dabb3103eba3904752e5b489038824c27b428)
+++ b/.idea/workspace.xml	(date 1721289966610)
@@ -4,7 +4,11 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="3fabb222-5e7b-4289-81fd-5e64d5ec8aa9" name="Changes" comment="inital commit" />
+    <list default="true" id="3fabb222-5e7b-4289-81fd-5e64d5ec8aa9" name="Changes" comment="inital commit">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/generators/episode_of_care.py" beforeDir="false" afterPath="$PROJECT_DIR$/generators/episode_of_care.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/resources/http_requests.py" beforeDir="false" afterPath="$PROJECT_DIR$/resources/http_requests.py" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -24,21 +28,21 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "ASKED_ADD_EXTERNAL_FILES": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "git-widget-placeholder": "master",
-    "last_opened_file_path": "C:/Users/KuziaJ/PycharmProjects/data-generator/generators",
-    "node.js.detected.package.eslint": "true",
-    "node.js.detected.package.tslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "nodejs_package_manager_path": "npm",
-    "settings.editor.selected.configurable": "project.propVCSSupport.DirectoryMappings",
-    "vue.rearranger.settings.migration": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/Users/KuziaJ/PycharmProjects/data-generator/generators&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;project.propVCSSupport.DirectoryMappings&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
-}]]></component>
+}</component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
       <recent name="C:\Users\KuziaJ\PycharmProjects\data-generator\generators" />
@@ -68,7 +72,11 @@
       <workItem from="1721024579274" duration="255000" />
       <workItem from="1721024842934" duration="684000" />
       <workItem from="1721025540532" duration="248000" />
-      <workItem from="1721025800004" duration="1633000" />
+      <workItem from="1721025800004" duration="2389000" />
+      <workItem from="1721134641603" duration="3772000" />
+      <workItem from="1721213565367" duration="2490000" />
+      <workItem from="1721283142994" duration="1514000" />
+      <workItem from="1721289576274" duration="388000" />
     </task>
     <task id="LOCAL-00001" summary="inital commit">
       <option name="closed" value="true" />
@@ -78,7 +86,15 @@
       <option name="project" value="LOCAL" />
       <updated>1720699727060</updated>
     </task>
-    <option name="localTasksCounter" value="2" />
+    <task id="LOCAL-00002" summary="inital commit">
+      <option name="closed" value="true" />
+      <created>1721029144319</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1721029144319</updated>
+    </task>
+    <option name="localTasksCounter" value="3" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
